<UserControl x:Class="ConfigurationEditor.ConfigurationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:models="clr-namespace:SchedulerSettings.Models;assembly=SchedulerSettings"
             xmlns:local="clr-namespace:ConfigurationEditor"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="750" Background="#E3E9F1">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="FeedbackValues" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:FeedbackType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ToastScenarioInternValues" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:ToastScenarioIntern"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid Margin="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <TabControl Grid.Column="1" Grid.Row="1" Background="#E3E9F1">
            <TabItem Header="General" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="70">
                <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <TextBlock Text="Visible tabs and titles" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                                <CheckBox  Margin="2" IsChecked="{Binding ActiveTabs.RequiredApps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.RequiredApps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>
                                <CheckBox  Margin="2" IsChecked="{Binding ActiveTabs.AvailableApps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.AvailableApps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>

                                <CheckBox Margin="2" IsChecked="{Binding ActiveTabs.Updates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.Updates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>

                                <CheckBox Margin="2" IsChecked="{Binding ActiveTabs.RestartCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.RestartCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>

                                <CheckBox Margin="2" IsChecked="{Binding ActiveTabs.Planner, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.Planner, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>

                                <CheckBox Margin="2" IsChecked="{Binding ActiveTabs.FeedBack, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="{Binding TabTitles.Feedback, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Required apps settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.TopTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitleNotAvailable" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.TopTitleNotAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsBeingEnforcedStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.AppIsBeingEnforcedStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="InstallationHasBeenScheduledStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.InstallationHasBeenScheduledStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsInstalledStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.AppIsInstalledStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppNeedsAttentionStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.AppNeedsAttentionStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsInErrorStateStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.AppIsInErrorStateStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="CoveredByServiceCycleText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RequiredAppsSettings.CoveredByServiceCycleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Available apps settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.TopTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitleNotAvailable" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.TopTitleNotAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="InstallationHasBeenScheduledStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.InstallationHasBeenScheduledStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsBeingEnforcedStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.AppIsBeingEnforcedStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsInstalledStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.AppIsInstalledStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppCanBeInstalledtatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.AppCanBeInstalledStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AppIsInErrorStateStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding AvailableAppsSettings.AppIsInErrorStateStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Updates settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="UpdatesAvailableTitleText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.UpdatesAvailableTitleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitleNotAvailable" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.TopTitleNotAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="UpdatesAvailableTitleText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.UpdatesAvailableTitleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="UpdatesAreScheduledTitleText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.UpdatesAreScheduledTitleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="UpdatesNeedsAttentionText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.UpdatesNeedsAttentionText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="UpdatesHaveBeenScheduledText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.UpdatesHaveBeenScheduledText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="CoveredByServiceCycleText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding UpdatesSettings.CoveredByServiceCycleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Restart center settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartSettings.TopTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TopTitleNotAvailable" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartSettings.TopTitleNotAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="RestartRequiredStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartSettings.RestartRequiredStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="RestartAcknowledgedStatusText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartSettings.RestartAcknowledgedStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Feedback settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Feedback type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource FeedbackValues}}" SelectedItem="{Binding FeedbackConfig.FeedBackType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Url" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.Url, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="MailTo" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.MailTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Smtp server" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.SmtpServer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SuccessTextLine1" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.SuccessTextLine1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SuccessTextLine2" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.SuccessTextLine2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="FailedTextLine1" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.FailedTextLine1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="FailedTextLine2" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding FeedbackConfig.MailSettings.FailedTextLine2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Toasts" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="70">
                <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <TextBlock Text="ToastNotifyAppInstallationStartSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyAppInstallationStartSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyAppInstallationStartSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyAppInstallationStartSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyNewApplicationSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewApplicationSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewApplicationSettings.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyNewApplicationSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewApplicationSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Schedule" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewApplicationSettings.BtSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Postpone" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewApplicationSettings.BtPostpone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <CheckBox  Margin="4" IsChecked="{Binding ToastNotifyNewApplicationSettings.OpenWizardTabOnSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="OpenWizardTabOnSchedule" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1"/>
                                </CheckBox>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyNewIpuApplicationSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewIpuApplicationSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewIpuApplicationSettings.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyNewIpuApplicationSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewIpuApplicationSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Schedule" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewIpuApplicationSettings.BtSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Postpone" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewIpuApplicationSettings.BtPostpone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyNewSupSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyNewSupSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Install" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.BtInstall, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Schedule" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.BtSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Postpone" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyNewSupSettings.BtPostpone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <CheckBox  Margin="4" IsChecked="{Binding ToastNotifyNewSupSettings.OpenWizardTabOnSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="OpenWizardTabOnSchedule" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1"/>
                                </CheckBox>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyRestartSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyRestartSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyRestartSettings.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyRestartSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyRestartSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Schedule" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyRestartSettings.BtSchedule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Button-Postpone" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyRestartSettings.BtPostpone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifySupInstallationStartSettings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifySupInstallationStartSettings.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifySupInstallationStartSettings.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifySupInstallationStartSettings.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifySupInstallationStartSettings.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyServiceInit" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceInit.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceInit.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyServiceInit.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceInit.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyServiceRunning" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRunning.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRunning.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyServiceRunning.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRunning.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyServiceEnd" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceEnd.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceEnd.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyServiceEnd.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>

                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceEnd.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="ToastNotifyServiceRestart" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRestart.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="SubTitle" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRestart.SubText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,2,0,0">
                                    <TextBlock Text="Toast type" MinWidth="220"/>
                                    <ComboBox Margin="5,0,0,0" Height="20" MinWidth="80" ItemsSource="{Binding Source={StaticResource ToastScenarioInternValues}}" SelectedItem="{Binding ToastNotifyServiceRestart.ToastScenario, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Duration" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ToastNotifyServiceRestart.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Restart" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="70">
                <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <TextBlock Text="ServiceConfig" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="DetectionInterval (minutes)" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ServiceConfig.DetectionInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="RestartDeadlineAfterInstall InDays" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ServiceConfig.RestartDeadlineAfterInstall.InDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="RestartDeadlineAfterInstall AtHour" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ServiceConfig.RestartDeadlineAfterInstall.AtHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="NumberOfRestartToastsPerDay" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ServiceConfig.NumberOfRestartToastsPerDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>

                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Service Cycle Config" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="ServiceCycleTabText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ServiceConfig.ServiceCycleTabText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <CheckBox  Margin="4" IsChecked="{Binding ServiceConfig.HardSuppressSCNotifications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox Text="HardSuppressSCNotifications" Background="Transparent" VerticalAlignment="Top" BorderThickness=".6" MinWidth="90" Padding="0,-1,0,1" PreviewKeyUp="TabTitle_PreviewKeyUp"/>
                                </CheckBox>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Confirm Window" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="InfoText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding ConfirmWindowSettings.InfoText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Restart Countdown Window" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="InfoText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding CountdownWindowSettings.InfoText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="TotalTime (s)" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding CountdownWindowSettings.TotalTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="RestoreInterval (s)" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding CountdownWindowSettings.RestoreInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="KeepOnTop (s)" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding CountdownWindowSettings.KeepOnTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Windows restart message" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="WindowsRestartMessage Line1" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartConfig.WindowsRestartMessage.Line1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="WindowsRestartMessage Line2" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartConfig.WindowsRestartMessage.Line2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="CountDown" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding RestartConfig.CountDown, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="'Install all' Warning dialog" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Warning Text" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding InstallAllWarningDialogSettings.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="ButtonNoText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding InstallAllWarningDialogSettings.ButtonNoText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="ButtonYesText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding InstallAllWarningDialogSettings.ButtonYesText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Restart detection" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="2,2,0,0">
                                    <CheckBox Content="ConfigMgrClient" Margin="2" IsChecked="{Binding RestartChecks.ConfigMgrClient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <CheckBox Content="WindowsUpdate" Margin="2" IsChecked="{Binding RestartChecks.WindowsUpdate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <CheckBox Content="ComponentBasedServicing" Margin="2" IsChecked="{Binding RestartChecks.ComponentBasedServicing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <CheckBox Content="PendingFileOperations" Margin="2" IsChecked="{Binding RestartChecks.PendingFileOperations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="PendingFileNameExclusions" MinWidth="220"/>
                                    <TextBox x:Name="FileExclusions" Margin="0,0,2,0" AcceptsReturn="True"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Wizards information text" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="2,2,0,0">
                                    <TextBox x:Name="PlannerInfoText" Text="{Binding PlannerSettings.InfoText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="LegalNotice" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <CheckBox Content="UseLegalNotice" Margin="4" IsChecked="{Binding LegalNotice.UseLegalNotice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="LegalNoticeCaption" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding LegalNotice.LegalNoticeCaption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="LegalNoticeText" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding LegalNotice.LegalNoticeText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="IPUApplication" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="70">
                <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <TextBlock Text="Title and information" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Title" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.UiTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Information" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.UiInfo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Pre update dialog" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <CheckBox Margin="2" Content="Show dialog" IsChecked="{Binding IpuApplication.ShowDialog1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Countdown seconds:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog1Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Dialog text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="AbortButtonText:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog1AbortButtonText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="StartButtonText:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog1StartButtonText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Restart dialog" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Countdown seconds:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog2Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" Height="auto"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Dialog text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="StartButtonText:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Dialog2StartButtonText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Drivers" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <CheckBox Margin="2" Content="UseWimDrivers" IsChecked="{Binding IpuApplication.UseWimDrivers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Margin="2" Content="UseVersionForLenovo" IsChecked="{Binding IpuApplication.UseVersionForLenovo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Excluded Models (separator ';'):" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.ExcludedModels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Custom drivers folder:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" ToolTip="%ProgramData%\~IPUDrivers" Text="{Binding IpuApplication.CustomDriversFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Progress settings" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <CheckBox Margin="2" Content="Show progress" IsChecked="{Binding IpuApplication.ShowProgress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Phase one Text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Phase1Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Phase two Text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Phase2Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Phase three Text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Phase3Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Phase four Text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.Phase4Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="FullMediaStatusText:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.FullMediaStatusText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Tooltip text:" MinWidth="220"/>
                                    <TextBox Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.ProgressTooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <TextBlock Text="Reporting" Margin="0,2,0,0" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Vertical" Margin="0,20,0,0">
                                <DockPanel Margin="5,2,0,0">
                                    <TextBlock Text="Api URL:" MinWidth="220"/>
                                    <TextBox IsEnabled="False" Margin="5,0,2,0" MinWidth="300" Text="{Binding IpuApplication.ApiUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
        
        <Button x:Name="BtDeploy" Grid.Column="1" Grid.Row="2" Content="Deploy" ToolTip="Deploy to Collection." Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="22" Width="65" Click="BtDeploy_Click"/>
        <Button x:Name="BtLoad" Grid.Column="1" Grid.Row="2" Content="Load" ToolTip="Load from Collection." Margin="70,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="22" Width="65" Click="BtLoad_Click"/>

        <Button x:Name="BtNew" Grid.Column="1" Grid.Row="2" Content="Default" ToolTip="Click to load a default configuration." Margin="0,0,140,0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="22" Width="65" Click="BtNew_Click"/>
        <Button x:Name="BtOpen" Grid.Column="1" Grid.Row="2" Content="Open" ToolTip="Click to open a config file." Margin="0,0,70,0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="22" Width="65" Click="BtOpen_Click"/>
        <Button x:Name="BtSave" Grid.Column="1" Grid.Row="2" Content="Save" ToolTip="Click to save a config file." Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="22" Width="65" Click="BtSave_Click"/>
    </Grid>
</UserControl>
